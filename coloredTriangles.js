// 7kyu Coloured triangles

// A coloured triangle is created from a row of colours, each of which is red, green or blue. Successive rows, each containing one fewer colour than the last, are generated by considering the two touching colours in the previous row.

// If these colours are identical, the same colour is used in the new row.
// If they are different, the missing colour is used in the new row.
// Return the final row, which contains only one single color


function triangle(row) {
  // recursive function until we reach final value
  // reduce var stores the next row
  let reduced = row.length > 1 ? '' : row;
  for (let i = 0; i < row.length -1; i++) {
    // compare two consecutive characters
    // if they are the same, that character is added to reduced
    // if they are different, both are removed from the string 'RGB', and the remaining character is added to reduced.
    reduced += row[i] == row[i+1] ? row[i] : 'RGB'.replace(row[i], '').replace(row[i+1], '');
  }
  return reduced.length > 1 ? triangle(reduced) : reduced;
}

//examples
console.log(triangle('GB')); // R
console.log(triangle('RRR')); // R
console.log(triangle('RGBG')); // B
console.log(triangle('RBRGBRB')); // G
